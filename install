#!/usr/bin/env bash

# 配置文件放置目录
dotfileDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# 通过 antigen 管理 oh-my-zsh
if [[ ! -e $HOME/.antigen.zsh ]]; then
    curl -L git.io/antigen > $HOME/.antigen.zsh
fi

#######################################################################
#                          需要创建的文件目录                         #
#######################################################################

dires=(
    ${dotfileDir}/.vim/bundle/. # 创建插件安装文件夹
    $HOME/backup/.                  # 创建备份配置文件夹
)

for dir in ${dires[@]}; do
    if [[ ! -e ${dir%/*} ]]; then
        mkdir -p ${dir%/*}
    fi
    if [[ ${dir##*/} != . && ! -e $HOME/${dir} ]]; then
        ln -s ${dotfileDir}/${dir##*/} $HOME/${dir}
    fi
done

#######################################################################
#                   配置文件软链接到用户主目录当中去                  #
#######################################################################

# 引入 soft 中的dotfiles变量
dotfiles=(
    .gtags.conf        # 支持解析标签
    .vim               # vim 插件目录
    .vimrc             # vim 编辑器配置文件
    .ycm_extra_conf.py # c 语言语义补全配置文件
    .zshrc             # zsh 的配置文件
)

# 匹配的进行删除
# [#%] 尽可能短的从[左右]往[右左]删除字符
# (##|%%) 尽可能长的从[左右]往[右左]删除字符
# ${var([#%]|##|%%)pattern} * 万用符
# 如果配置文件在安装之前存在放入备份文件夹
for dotfile in ${dotfiles[@]}; do
    if [[ -L $HOME/${dotfile##*/} && -L $HOME/backup/${dotfile##*/} ]]; then
        echo "删除 $HOME/backup/${dotfile##*/} 文件"
        rm $HOME/backup/${dotfile##*/}
        echo "移动 $HOME/${dotfile##*/} 文件到 backup 文件夹"
        mv $HOME/${dotfile##*/} $HOME/backup
    elif [[ -L $HOME/${dotfile##*/} || -e $HOME/${dotfile##*/} && ! -L $HOME/backup/${dotfile##*/} ]]; then
        echo "移动 $HOME/${dotfile##*/} 文件到 backup 文件夹"
        mv $HOME/${dotfile##*/} $HOME/backup
    fi
    echo -e "软链接配置文件 ${dotfileDir}/${dotfile} 到 $HOME/${dotfile##*/}\n"
    ## 把配置文件软链接到用户主目录中
    ln -s ${dotfileDir}/${dotfile} $HOME/${dotfile##*/}
done

#######################################################################
#                          安装 vim 插件目录                          #
#######################################################################

if [[ `uname -s` == 'MSYS_NT-6.1' || `uname -s` == 'MINGW64_NT-6.1' ]]; then
    if [[ ! -e $HOME/vimfiles/autoload/plug.vim ]]; then
        curl -fLo $HOME/vimfiles/autoload/plug.vim --create-dirs \
            https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    fi
elif [[ `uname -s` == 'Darwin' ]]; then
    if [[ ! -e $HOME/.vim/autoload/plug.vim ]]; then
        curl -fLo $HOME/.vim/autoload/plug.vim --create-dirs \
            https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    fi
elif [[ `uname -s` == 'Linux' ]]; then
    if [[ ! -e $HOME/.vim/autoload/plug.vim ]]; then
        curl -fLo $HOME/.vim/autoload/plug.vim --create-dirs \
            https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    fi
else
    :
fi
